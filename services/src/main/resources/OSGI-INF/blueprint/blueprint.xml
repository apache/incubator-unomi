<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
           http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <cm:property-placeholder persistent-id="org.apache.unomi.services"
                             update-strategy="reload" placeholder-prefix="${services.">
        <cm:default-properties>
            <cm:property name="profile.purge.interval" value="1"/>
            <cm:property name="profile.purge.inactiveTime" value="30"/>
            <cm:property name="profile.purge.existTime" value="-1"/>
            <cm:property name="event.purge.existTime" value="12"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="persistenceService"
               interface="org.apache.unomi.persistence.spi.PersistenceService"/>
    <reference id="httpService" interface="org.osgi.service.http.HttpService"/>

    <!-- Service definitions -->

    <bean id="definitionsServiceImpl" class="org.apache.unomi.services.services.DefinitionsServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    <service id="definitionsService" ref="definitionsServiceImpl" auto-export="interfaces"/>

    <bean id="eventServiceImpl" class="org.apache.unomi.services.services.EventServiceImpl">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="predefinedEventTypeIds">
            <set>
                <value>view</value>
                <value>login</value>
                <value>sessionCreated</value>
                <value>facebookLogin</value>
                <value>profileUpdated</value>
            </set>
        </property>
        <property name="restrictedEventTypeIds">
            <set>
                <value>sessionCreated</value>
                <value>sessionReassigned</value>
                <value>profileUpdated</value>
                <value>ruleFired</value>
            </set>
        </property>
        <property name="thirdPartyConfiguration">
            <cm:cm-properties persistent-id="org.apache.unomi.thirdparty" update="true" />
        </property>
    </bean>
    <service id="eventService" ref="eventServiceImpl" auto-export="interfaces"/>

    <bean id="goalsServiceImpl" class="org.apache.unomi.services.services.GoalsServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="rulesService" ref="rulesServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    <service id="goalsService" ref="goalsServiceImpl" auto-export="interfaces"/>

    <bean id="actionExecutorDispatcherImpl"
          class="org.apache.unomi.services.actions.ActionExecutorDispatcher">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="rulesServiceImpl" class="org.apache.unomi.services.services.RulesServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="eventService" ref="eventServiceImpl"/>
        <property name="actionExecutorDispatcher" ref="actionExecutorDispatcherImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    <service id="rulesService" ref="rulesServiceImpl" auto-export="interfaces"/>

    <bean id="segmentServiceImpl" class="org.apache.unomi.services.services.SegmentServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="rulesService" ref="rulesServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="taskExecutionPeriod" value="86400000"/>
    </bean>
    <service id="segmentService" ref="segmentServiceImpl" auto-export="interfaces"/>

    <bean id="profileServiceImpl" class="org.apache.unomi.services.services.ProfileServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="segmentService" ref="segmentServiceImpl"/>
        <property name="queryService" ref="queryServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="purgeProfileInterval" value="${services.profile.purge.interval}"/>
        <property name="purgeProfileInactiveTime" value="${services.profile.purge.inactiveTime}"/>
        <property name="purgeProfileExistTime" value="${services.profile.purge.existTime}"/>
        <property name="purgeSessionsAndEventsTime" value="${services.event.purge.existTime}"/>
    </bean>
    <service id="profileService" ref="profileServiceImpl" auto-export="interfaces"/>

    <bean id="queryServiceImpl" class="org.apache.unomi.services.services.QueryServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
    </bean>
    <service id="queryService" ref="queryServiceImpl" auto-export="interfaces"/>


    <!-- Choice list initializers -->

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="comparisonOperator"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.ComparisonOperatorChoiceListInitializer">
            <property name="bundleContext" ref="blueprintBundleContext"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="eventProperty"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.EventPropertyChoiceListInitializer">
            <property name="eventService" ref="eventServiceImpl"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="segments"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.SegmentsChoiceListInitializer">
            <property name="segmentService" ref="segmentServiceImpl"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="eventTypeId"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.EventTypeIdChoiceListInitializer">
            <property name="eventService" ref="eventServiceImpl"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="country"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.CountryChoiceListInitializer"/>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="goals"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.GoalsChoiceListInitializer">
            <property name="goalsService" ref="goalsServiceImpl"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="initializerId" value="campaigns"/>
        </service-properties>
        <bean class="org.apache.unomi.services.conditions.initializers.CampaignsChoiceListInitializer">
            <property name="goalsService" ref="goalsServiceImpl"/>
        </bean>
    </service>


    <!-- We use a listener here because using the list directly for listening to proxies coming from the same bundle didn't seem to work -->
    <reference-list id="eventListenerServices"
                    interface="org.apache.unomi.api.services.EventListenerService"
                    availability="optional">
        <reference-listener
                bind-method="bind" unbind-method="unbind" ref="eventServiceImpl"/>
    </reference-list>

    <!-- Property merge strategy executors -->

    <service auto-export="interfaces">
        <service-properties>
            <entry key="propertyMergeStrategyExecutorId" value="defaultPropertyMergeStrategyExecutor"/>
        </service-properties>
        <bean class="org.apache.unomi.services.mergers.DefaultPropertyMergeStrategyExecutor">
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="propertyMergeStrategyExecutorId" value="addPropertyMergeStrategyExecutor"/>
        </service-properties>
        <bean class="org.apache.unomi.services.mergers.AddPropertyMergeStrategyExecutor">
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="propertyMergeStrategyExecutorId" value="mostRecentPropertyMergeStrategyExecutor"/>
        </service-properties>
        <bean class="org.apache.unomi.services.mergers.MostRecentPropertyMergeStrategyExecutor">
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="propertyMergeStrategyExecutorId" value="oldestPropertyMergeStrategyExecutor"/>
        </service-properties>
        <bean class="org.apache.unomi.services.mergers.OldestPropertyMergeStrategyExecutor">
        </bean>
    </service>

    <service auto-export="interfaces">
        <service-properties>
            <entry key="propertyMergeStrategyExecutorId" value="nonEmptyPropertyMergeStrategyExecutor"/>
        </service-properties>
        <bean class="org.apache.unomi.services.mergers.NonEmptyPropertyMergeStrategyExecutor">
        </bean>
    </service>

</blueprint>
